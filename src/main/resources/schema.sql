DROP TABLE IF EXISTS event_feed;
DROP TABLE IF EXISTS Film_genre;
DROP TABLE IF EXISTS Likes;
DROP TABLE IF EXISTS Friendship;
DROP TABLE IF EXISTS Genre;
DROP TABLE IF EXISTS film_directors;
DROP TABLE IF EXISTS review_likes;
DROP TABLE IF EXISTS reviews;
DROP TABLE IF EXISTS Films;
DROP TABLE IF EXISTS Rating;
DROP TABLE IF EXISTS Users;
DROP TABLE IF EXISTS directors;

CREATE TABLE IF NOT EXISTS Genre
(
    id   INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(100) NOT NULL UNIQUE
);

CREATE TABLE IF NOT EXISTS Users
(
    id       BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    email    VARCHAR(255) NOT NULL UNIQUE,
    login    VARCHAR(255) NOT NULL UNIQUE,
    name     VARCHAR(255),
    birthday DATE
);

CREATE TABLE IF NOT EXISTS Rating
(
    rating_id   INTEGER PRIMARY KEY,
    rating_name VARCHAR(50) NOT NULL UNIQUE
);

CREATE TABLE IF NOT EXISTS Films
(
    id           BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name         VARCHAR(255) NOT NULL,
    description  TEXT,
    release_date DATE,
    duration     INTEGER CHECK (duration > 0),
    rating_id    INTEGER,
    FOREIGN KEY (rating_id) REFERENCES Rating (rating_id)
);

CREATE TABLE IF NOT EXISTS Friendship
(
    user_id   BIGINT NOT NULL,
    friend_id BIGINT NOT NULL,
    PRIMARY KEY (user_id, friend_id),
    FOREIGN KEY (user_id) REFERENCES Users (id) ON DELETE CASCADE,
    FOREIGN KEY (friend_id) REFERENCES Users (id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS Likes
(
    user_id BIGINT NOT NULL,
    film_id BIGINT NOT NULL,
    FOREIGN KEY (user_id) REFERENCES Users (id) ON DELETE CASCADE,
    FOREIGN KEY (film_id) REFERENCES Films (id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS Film_genre
(
    film_id  BIGINT  NOT NULL,
    genre_id INTEGER NOT NULL,
    PRIMARY KEY (film_id, genre_id),
    FOREIGN KEY (film_id) REFERENCES Films (id) ON DELETE CASCADE,
    FOREIGN KEY (genre_id) REFERENCES Genre (id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS directors
(
    director_id BIGINT       NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    name        varchar(255) NOT NULL,
    CONSTRAINT directors_pk PRIMARY KEY (director_id)
);

CREATE TABLE IF NOT EXISTS film_directors
(
    id          BIGINT NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    film_id     BIGINT NOT NULL,
    director_id BIGINT NOT NULL,
    CONSTRAINT film_directors_pk PRIMARY KEY (id),
    FOREIGN KEY (film_id) REFERENCES Films (id) ON DELETE CASCADE,
    FOREIGN KEY (director_id) REFERENCES directors (director_id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS reviews
(
    review_id   BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    content     TEXT,
    is_positive BOOLEAN NOT NULL,
    user_id     BIGINT  NOT NULL,
    film_id     BIGINT  NOT NULL,
    CONSTRAINT reviews_user_id_fk
        FOREIGN KEY (user_id) REFERENCES Users ON DELETE CASCADE,
    CONSTRAINT reviews_film_id_fk
        FOREIGN KEY (film_id) REFERENCES Films ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS review_likes
(
    review_id BIGINT  NOT NULL,
    user_id   BIGINT  NOT NULL,
    is_like   BOOLEAN NOT NULL,
    CONSTRAINT review_likes_pk
        PRIMARY KEY (review_id, user_id),
    CONSTRAINT review_likes_review_id_fk
        FOREIGN KEY (review_id) REFERENCES reviews ON DELETE CASCADE,
    CONSTRAINT review_likes_user_id_fk
        FOREIGN KEY (user_id) REFERENCES Users ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS event_feed
(
    event_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    timestamp BIGINT NOT NULL,
    user_id BIGINT NOT NULL,
    event_type VARCHAR(20) NOT NULL,
    operation VARCHAR(20) NOT NULL,
    entity_id BIGINT NOT NULL,
    FOREIGN KEY (user_id) REFERENCES Users (id) ON DELETE CASCADE
);